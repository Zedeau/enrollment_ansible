# tasks file for enrollment_ansible

#- name: register the foreman hostname
#  shell: "grep '^hostname = {{ foreman_fqdn }}' /etc/rhsm/rhsm.conf"
#  ignore_errors: yes
#  register: grep_return

# Check if katello-ca is installed, if yes, host is registered to satellite, if not, host is not registered then run the block

- name: block to run when the host is not registered to the Satellite
  block:
#  when: grep_return.rc == 1
    - name: ensure you have the latest version of subscription manager 
      yum:
        name: subscription-manager
        state: latest
        
    - name: clean the subscription manager config
      shell: subscription-manager clean

    - name: disable subscription-manager plugin for yum
      lineinfile:
        path: /etc/yum/pluginconf.d/subscription-manager.conf
        regexp: '^enabled='
        line: 'enabled=0'

    - name: remove previous registration data
      file:
        path: /etc/pki/consumed/cert.pem
        state: absent

    - name: remove Satellite 5 registration locally
      file:
        path: /etc/sysconfig/rhn/systemid
        state: absent

    - copy:
        src: "{{ item }}"
        dest: "{{ item }}.bak"
      with_fileglob:
        - /etc/yum.repos.d/*

    - name: ensure remote execution user {{ rex_user }} exists
      user:
        name: "{{ rex_user }}"
        home: "{{ home_dir }}"
        expires: -1

    - name: ensure {{ rex_user }} user is in the sudoers
      lineinfile:
        create: yes
        path: "{{ sudoers }}"
        state: present
        line: "{{ rex_user }} ALL = (root) NOPASSWD: ALL"

    - name: download bootstrap.py from {{ foreman_fqdn }}
      get_url:
        dest: "{{ bootstrap_path }}"
        url: "{{ download_method }}://{{ foreman_fqdn }}/pub/bootstrap.py"
        
    - name: operating system definition
      set_fact:
        ansible_distribution: "RHEL Server"
      when: ansible_distribution == "RedHat"

    - name: generate bootstrap.py arguments
      set_fact:
        bootstrap_args: "--server {{ foreman_fqdn }} --organization '{{ organization }}' --location '{{ location }}' --activationkey '{{ activationkey }}' --download-method {{ download_method }} --rex --rex-user {{ rex_user }} --enablerepos {{ repos }}"
        bootstrap_foreman_args: "{% if password != '' %}--login '{{ login }}' --password '{{ password }}' --hostgroup '{{ hostgroup }}'{% else %}--skip foreman{% endif %}"
        bootstrap_additional_args: "--skip katello-agent --skip puppet --operatingsystem '{{ ansible_distribution }} {{ ansible_distribution_version }}' --fqdn {{ ansible_hostname }} --force"

    - name: run bootstrap.py
      command: "python {{ bootstrap_path }} {{ bootstrap_args }} {{ bootstrap_foreman_args }} {{ bootstrap_additional_args }}"

    - name: remove bootstrap.py
      file:
        path: "{{ bootstrap_path }}"
        state: absent
